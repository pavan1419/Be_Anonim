#!/bin/bash


function tor_start {
    # Make sure only root can run this script
    if [ $(id -u) != 0 ]; then
        echo "This script requires root privileges. Please run with sudo."
        exit 1
    fi
    
    
    if [ ! -e /var/run/tor/tor.pid ]; then
        echo -e "$GREEN*$BLUE starting Tor...\n" >&2
        sleep 1
        service resolvconf stop
        killall dnsmasq
        sleep 2
        service tor start
        sleep 6
    fi
    if ! [ -f /etc/network/iptables.rules ]; then
        iptables-save > /etc/network/iptables.rules
        echo -e "$GREEN*$BLUE Saving iptables.rules...$RESETCOLOR\n"
        sleep 2
    fi
    iptables -F
    iptables -t nat -F
    echo -e "$GREEN*$BLUE iptables.rules$GREEN [SAVED]\n"
    sleep 2
    echo -e "$GREEN*$BLUE Saving resolv.conf...\n"
    cp /etc/resolv.conf /etc/resolv.conf.bak
    touch /etc/resolv.conf
    sleep 2
    echo -e "$GREEN*$BLUE resolv.conf$GREEN [SAVED]\n"
    sleep 2
    echo -e "$GREEN*$BLUE Modifying DNS...\n"
    sleep 2
    echo -e 'nameserver 127.0.0.1\nnameserver 213.73.91.35\nnameserver 87.118.100.175' > /etc/resolv.conf
    echo -e "$GREEN*$BLUE resolv.conf: Chaos Computer Club & German Privacy Foundation DNS$GREEN [ACTIVATED]\n"$RESETCOLOR
    sleep 2
    
    # set iptables nat
    iptables -t nat -A OUTPUT -m owner --uid-owner $TOR_UID -j RETURN
    iptables -t nat -A OUTPUT -p udp --dport 53 -j REDIRECT --to-ports 53
    iptables -t nat -A OUTPUT -p tcp --dport 53 -j REDIRECT --to-ports 53
    iptables -t nat -A OUTPUT -p udp -m owner --uid-owner $TOR_UID -m udp --dport 53 -j REDIRECT --to-ports 53
    
    # resolve .onion domains mapping 10.192.0.0/10 address space
    iptables -t nat -A OUTPUT -p tcp -d 10.192.0.0/10 -j REDIRECT --to-ports 9040
    iptables -t nat -A OUTPUT -p udp -d 10.192.0.0/10 -j REDIRECT --to-ports 9040
    
    # exclude local addresses
    for NET in $TOR_EXCLUDE 127.0.0.0/9 127.128.0.0/10; do
        iptables -t nat -A OUTPUT -d $NET -j RETURN
    done
    
    # redirect all other output through TOR
    iptables -t nat -A OUTPUT -p tcp --syn -j REDIRECT --to-ports $TOR_PORT
    iptables -t nat -A OUTPUT -p udp -j REDIRECT --to-ports $TOR_PORT
    iptables -t nat -A OUTPUT -p icmp -j REDIRECT --to-ports $TOR_PORT
    
    # accept already established connections
    iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
    
    # exclude local addresses
    for NET in $TOR_EXCLUDE 127.0.0.0/8; do
        iptables -A OUTPUT -d $NET -j ACCEPT
    done
    
    # allow only tor output
    iptables -A OUTPUT -m owner --uid-owner $TOR_UID -j ACCEPT
    iptables -A OUTPUT -j REJECT
    
    echo -e "$GREEN*$BLUE Tor Tunneling$GREEN [ON]"$RESETCOLOR
    sleep 1
    notify "Tor Tunneling ON"
}



function Tor_stop {
    # Make sure only root can run our script
    if [ $(id -u) != 0 ]; then
        echo "This script requires root privileges. Please run with sudo."
        exit 1
    fi
    echo -e "\n$GREEN[$BLUE i$GREEN ]$BLUE Stopping Tor mode:$RESETCOLOR\n"
    
    iptables -F
    iptables -t nat -F
    echo -e " $GREEN*$BLUE Deleted all iptables rules\n$RESETCOLOR"
    
    if [ -f /etc/network/iptables.rules ]; then
        iptables-restore < /etc/network/iptables.rules
        rm /etc/network/iptables.rules
        echo -e " $GREEN*$BLUE Iptables rules restored"
    fi
    
    # restore DNS settings
    if [ "$resolvconf_support" = false ]
    then
        if [ -e /etc/resolv.conf.bak ]; then
            rm /etc/resolv.conf
            cp /etc/resolv.conf.bak /etc/resolv.conf
        fi
    else
        mv /etc/resolvconf/resolv.conf.d/head{.bak,}
        resolvconf -u
    fi
    
    service tor stop
    
    echo -e "\n$GREEN[$BLUE i$GREEN ]$BLUE Reenabling IPv6 services:$RESETCOLOR\n"
    
    # reenable IPv6 services
    sed -i '/^.*\#kali-anonsurf$/d' /etc/sysctl.conf #delete lines containing #kali-anonsurf in /etc/sysctl.conf
    sysctl -p # have sysctl reread /etc/sysctl.conf
    
    service network-manager force-reload > /dev/null 2>&1
    service nscd start > /dev/null 2>&1
    service dnsmasq start > /dev/null 2>&1
    
    echo -e " $GREEN*$BLUE Anonymous mode stopped$RESETCOLOR\n"
}


function tor_change {
    service tor reload
    sleep 2
    echo -e " $GREEN*$BLUE Tor daemon reloaded and forced to change nodes$RESETCOLOR\n"
}